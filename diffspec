#!/usr/bin/env bash
# Usage:  diffspec [-v] program provided [specname]
# The test must be under the specs/ directory.
# If no testname is specified, all tests under specs/ will be ran.
# Use -v to turn on verbose mode. Output will be printed for passing tests as well.
# Creds to CS 247 TA for parts of the code!!!

RED=$(setterm --foreground red)
GREEN=$(setterm --foreground green)
NC=$(setterm --default)

if [ $# -lt 2 ]; then
    echo "Usage:  $0 program provided [specname]" >&2
    exit 1
fi

if [ "$1" == "-v" ]; then
    verbose=1
    shift
else
    verbose=0
fi

prog="$1"
prov="$2"
passed=1

if [ -z "$3" ]; then
    echo "Running all tests" >&2
    # TODO: handle spaces properly

    subdircount=`find specs/* -maxdepth 1 -type d | wc -l`
    if [ $subdircount -eq 0 ]; then
        tests="$(ls specs/*.in)"
    else
        tests="$(ls specs/*.in specs/**/*.in)"
    fi
else
    tests="specs/$3.in"
fi

if [ ! -x "$prog" ]; then
    echo "Executable $prog does not exist or is not executable" >&2
    exit 1
fi

if [ ! -x "$prov" ]; then
    echo "Executable $prov does not exist or is not executable" >&2
    exit 1
fi

print_output() {
    echo "Input:"
    cat "$infile"
    echo -e "\n${GREEN}Expected output:"
    cat "$provfile"
    echo -e "\n${RED}Actual output:"
    cat "$outfile"
}

for test in $tests; do
    infile="$test"
    outfile=$(mktemp)
    provfile=$(mktemp)
    if [ ! -r "$infile" ]; then
        echo "File $infile does not exist or is not readable" >&2
        exit 1
    fi
    ./"$prog" < "$infile" &> "$outfile"
    echo "\n" >> "$outfile"
    ./"$prov" < "$infile" &> "$provfile"
    echo "\n" >> "$provfile"
    diffRes=$(diff -u "$provfile" "$outfile")
    if [ "$diffRes" != "" ]; then
        passed=0
        echo -e "${RED}Fail: $test\n"
        print_output
        echo -e "\n\nDiff:"
        echo -e "${diffRes}"
        echo -e "${NC}"
    else
        echo -e "${GREEN}Pass: $test${NC}"
        if [[ $verbose -eq 1 ]]; then
            print_output
        fi
    fi

    rm "$outfile"
    rm "$provfile"
done

if [ "$passed" = 1 ]; then
    echo -e "\nâœ… ${GREEN} All tests passed${NC} ðŸ’¯"
fi
